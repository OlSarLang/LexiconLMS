@model LexiconLMS.Core.Models.Activity

@{
    ViewData["Title"] = "Details";
}

<h1>Activity</h1>

<div>
    <h4>Activity</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
</div>
<div>
    @foreach (var documentActivty in Model.Documents)
    {
        <span>@documentActivty.Document.Name</span>
        <a asp-action="DownloadDocument" asp-controller="Document" asp-route-documentId="@documentActivty.DocumentId">Download</a> <text>|</text>
        <a asp-controller="Document" asp-action="RemoveDocument" asp-route-documentId="@documentActivty.DocumentId" asp-route-entityId="@documentActivty.ActivityId">Remove</a><br />
    }
</div>
<div>
    @if (User.IsInRole("Teacher"))
    {
        await Component.InvokeAsync("DocumentUpload", new { entityId = Model.Id.ToString(), user = User, entityType = "Activity" });
    }
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a href="@Url.Action("Details", "Module", new { id = Model.ModuleId })">Back to List</a>
</div>
